CS
  ::= Expr* EOF

Expr
  ::=   comments? ( items ( statement (statement)* )? ) Separator?

statement ::= Operator items

items ::= item ("," item)*

item ::= URI | literal

Separator
  ::= ';'

literal
  ::= '"' astring '"'

URI
  ::= "[" scheme? hostport? (segment)* fragment? query? headers "]"

header
  ::=  literal ":" literal

headers
  ::= header*

host
  ::= nstring

port
  ::= digit (digit)*

hostport
  ::= host (":" port)?

segment
  ::= path_delim pstring path_delim?

query
  ::= '?' astring

fragment
  ::= '#' astring

comments ::= "//" astring (astring)*

whitespace
         ::=  S^WS
          /* ws: definition */

<?TOKENS?>

scheme
  ::= ("https" | "http" | "file") '://'

Operator
  ::= '|' |  '=|' | ">>" | '>' | '!' | "!=" | "==" | "=&" | "=" | "==" | ":"

nstring ::= alpha (alpha | schar | digit)*
pstring ::= pall (pall)*
pall ::= Operator | alpha | digit | schar
astring ::= all (all | S )*
all ::= Operator | alpha | digit | schar | path_delim

schar ::= "_" | "." | "<" | ">" | "</" | "'"  | "," | ";" | "&" | "{" | "}" | "-"

path_delim ::= '/'

digit ::= [0-9]

alpha ::= [a-z] | [A-Z]

S     ::= ( #x0020 | #x0009 | #x000D | #x000A )+

EOF   ::= $
